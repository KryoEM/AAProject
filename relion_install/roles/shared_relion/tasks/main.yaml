- name: Check if CUDA installed 
  shell: "nvcc --version | grep '8.0'"
  register: nvcc_80
  environment:
    PATH: "{{ansible_env.PATH}}:{{ local_bin }}"
    LD_LIBRARY_PATH: "{{ local_lib }}"
  ignore_errors: true # do not stop playbook if CUDA not found

- when: nvcc_80|failed
  pause:
    prompt: "WARNING: Could not find CUDA. Please install CUDA before running this playbook. You can exit the playbook with 'ctrl-c' then 'a'. If you want to continue installing Relion without GPU support, hit 'enter'."


- name: Create individual software directories
  file:
    state: directory
    path: "{{ item }}"
  with_items:
    - "{{relion_download_dir}}"
    - "{{relion_ver_dir}}"
    - "{{motioncorr_ver_dir}}"
    - "{{unblur_ver_dir}}"
    - "{{summovie_ver_dir}}"
    - "{{ctffind4_ver_dir}}"
    - "{{gctf_install_dir}}"
    - "{{resmap_install_dir}}"



- name: Check if Relion 2.0 is already installed
  stat:
    path: "{{relion_exe_path}}"
  register: relion_path

- when: relion_path.stat.exists
  debug:
    msg: "Relion 2.0 is already installed, with an executable at {{relion_exe_path}} If you want to re-do the installation, please delete the existing installation folder. If you want to upgrade Relion 2.0 to a newer release, please change the release number in the var file."

- name: Install Relion 2.0
  when: not relion_path.stat.exists
  include: install_relion_base.yaml
  environment:
    PATH: "{{ansible_env.PATH}}:{{ local_bin }}"
    LD_LIBRARY_PATH: "{{ local_lib }}"

- name: "Verify FFTW and FLTK lib exist"
  file:
    path: "{{relion_ver_dir}}lib/"
    state: directory

- name: Relion - ensure paths to FFTW and FLTK libraries exist
  shell: "cp -d -n {{relion_download_dir}}external/*/lib/lib* {{relion_ver_dir}}lib/"
  # -d to preserve links
  # -n no-clobber, will not overwrite existing files



- name: Relion - check for custom Python scripts
  stat:
    path: "{{ relion_download_dir }}python/"
  register: relion_dl_python_check

- name: Relion - copy custom Python scripts to installation directory
  synchronize:
    src: "{{ relion_download_dir }}python/"
    dest: "{{ relion_python_dir }}"
    recursive: yes
    delete: yes
  when: relion_dl_python_check.stat.exists


- name: Relion - add sample mpirun hosts file
  template:
    src: "mpirun_default.hosts.j2"
    dest: "{{ relion_ver_dir }}mpirun_default.hosts"





- name: Install auxiliary software if not already installed
  include: install_aux.yaml


