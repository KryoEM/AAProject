# Install Python-related modules, such as Anaconda and mpi4py
---
- name: Set up Python directory
  file:
    state: directory
    path: "{{ item }}"
  with_items:
    - "{{ python_dir }}"
    - "{{ download_dir }}"

- name: Check if Anaconda installation exists
  stat:
    path: "{{ anaconda_bin }}"
  register: anaconda_bin_path

- name: Create download directory if it doesn't exist
  file: path={{ download_dir }} state=directory


- name: Display message
  debug:
    msg: "Anaconda for Python 2.7 will be installed in {{ python_dir }}. Output generated by the installer will be also be located there. If installation fails, please check for error messages there."
  when: not anaconda_bin_path.stat.exists


- name: Download Anaconda for Python 2.7 installer
  get_url:
    url: "{{ anaconda_dl_link }}"
    dest: "{{ download_dir }}{{ anaconda_installer }}"
    checksum: "{{ anaconda_dl_checksum }}"
  when: not anaconda_bin_path.stat.exists

# run Anaconda installer in batch mode (i.e. no manual input)
- name: Run Anaconda installer
  shell: "bash {{ anaconda_installer }} -b -p {{ anaconda_install_dir }} > {{ python_dir}}anaconda_install.out 2> {{ python_dir }}anaconda_install.err"
  args:
    chdir: "{{ download_dir }}"
  when: not anaconda_bin_path.stat.exists


- name: Upgrade pip
  pip:
    name: pip
    extra_args: --upgrade
  environment:
    PATH: "{{ anaconda_bin }}:{{ ansible_env.PATH }}"

- name: Install Python packages
  pip:
    name: "{{ item }}"
    state: latest
  with_items:
    - mpi4py
    - simplejson
    - numpy
    - psutil
  environment:
    PATH: "{{ anaconda_bin }}:{{ ansible_env.PATH }}"

